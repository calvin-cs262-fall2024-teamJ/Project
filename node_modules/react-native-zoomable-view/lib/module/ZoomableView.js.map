{"version":3,"sources":["ZoomableView.tsx"],"names":["React","StyleSheet","useWindowDimensions","PanGestureHandler","PinchGestureHandler","RotationGestureHandler","Animated","useAnimatedGestureHandler","useAnimatedStyle","useSharedValue","withSpring","styles","create","container","alignItems","justifyContent","focalPoint","absoluteFillObject","width","height","backgroundColor","borderRadius","ZoomableView","children","scale","rotate","focalX","focalY","transitionX","transitionY","imagePinch","createRef","imageRotation","imagePan","pinchHandler","onActive","event","value","onEnd","roteteHandler","rotation","panHandler","translationX","translationY","rStyle","transform","translateX","translateY"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, useWindowDimensions } from 'react-native';\nimport {\n  PanGestureHandler,\n  PinchGestureHandler,\n  PinchGestureHandlerGestureEvent,\n  PanGestureHandlerGestureEvent,\n  RotationGestureHandler,\n  RotationGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  focalPoint: {\n    ...StyleSheet.absoluteFillObject,\n    width: 20,\n    height: 20,\n    backgroundColor: 'blue',\n    borderRadius: 10,\n  },\n});\n\ntype ZoomableViewProps = {};\n\nexport const ZoomableView: React.FC<ZoomableViewProps> = ({ children }) => {\n  const scale = useSharedValue(1);\n  const rotate = useSharedValue(0);\n  const focalX = useSharedValue(0);\n  const focalY = useSharedValue(0);\n  const transitionX = useSharedValue(0);\n  const transitionY = useSharedValue(0);\n  const { width } = useWindowDimensions();\n  const imagePinch = React.createRef();\n  const imageRotation = React.createRef();\n  const imagePan = React.createRef();\n\n  const pinchHandler =\n    useAnimatedGestureHandler<PinchGestureHandlerGestureEvent>({\n      onActive: (event) => {\n        scale.value = event.scale;\n        focalX.value = event.focalX;\n        focalY.value = event.focalY;\n      },\n      onEnd: () => {\n        scale.value = 1;\n      },\n    });\n\n  const roteteHandler =\n    useAnimatedGestureHandler<RotationGestureHandlerGestureEvent>({\n      onActive: (event) => {\n        rotate.value = event.rotation * 90;\n      },\n      onEnd: () => {\n        rotate.value = withSpring(0);\n      },\n    });\n\n  const panHandler = useAnimatedGestureHandler<PanGestureHandlerGestureEvent>({\n    onActive: (event) => {\n      transitionX.value = -event.translationX;\n      transitionY.value = -event.translationY;\n    },\n    onEnd: () => {\n      transitionX.value = withSpring(0);\n      transitionY.value = withSpring(0);\n    },\n  });\n\n  const rStyle = useAnimatedStyle(() => ({\n    transform: [\n      { translateX: focalX.value },\n      { translateY: focalY.value },\n      { translateX: -100 },\n      { translateY: -100 },\n      { scale: scale.value },\n      { translateX: -focalX.value },\n      { translateY: -focalY.value },\n      { translateX: 100 },\n      { translateY: 100 },\n      { rotate: `${rotate.value}deg` },\n      { translateX: -transitionX.value },\n      { translateY: -transitionY.value },\n    ],\n  }));\n\n  return (\n    <PanGestureHandler\n      simultaneousHandlers={[imagePinch, imageRotation]}\n      onGestureEvent={panHandler}\n      ref={imagePan}\n    >\n      <Animated.View>\n        <PinchGestureHandler\n          ref={imagePinch}\n          simultaneousHandlers={[imagePan, imageRotation]}\n          onGestureEvent={pinchHandler}\n        >\n          <Animated.View style={{ width }}>\n            <RotationGestureHandler\n              ref={imageRotation}\n              simultaneousHandlers={[imagePan, imagePinch]}\n              onGestureEvent={roteteHandler}\n            >\n              <Animated.View\n                style={[styles.container, rStyle]}\n                collapsable={false}\n              >\n                {children}\n              </Animated.View>\n            </RotationGestureHandler>\n          </Animated.View>\n        </PinchGestureHandler>\n      </Animated.View>\n    </PanGestureHandler>\n  );\n};\n"]}