{"version":3,"sources":["ZoomableView.tsx"],"names":["styles","StyleSheet","create","container","alignItems","justifyContent","focalPoint","absoluteFillObject","width","height","backgroundColor","borderRadius","ZoomableView","children","scale","rotate","focalX","focalY","transitionX","transitionY","imagePinch","React","createRef","imageRotation","imagePan","pinchHandler","onActive","event","value","onEnd","roteteHandler","rotation","panHandler","translationX","translationY","rStyle","transform","translateX","translateY"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, useWindowDimensions } from 'react-native';\nimport {\n  PanGestureHandler,\n  PinchGestureHandler,\n  PinchGestureHandlerGestureEvent,\n  PanGestureHandlerGestureEvent,\n  RotationGestureHandler,\n  RotationGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  focalPoint: {\n    ...StyleSheet.absoluteFillObject,\n    width: 20,\n    height: 20,\n    backgroundColor: 'blue',\n    borderRadius: 10,\n  },\n});\n\ntype ZoomableViewProps = {};\n\nexport const ZoomableView: React.FC<ZoomableViewProps> = ({ children }) => {\n  const scale = useSharedValue(1);\n  const rotate = useSharedValue(0);\n  const focalX = useSharedValue(0);\n  const focalY = useSharedValue(0);\n  const transitionX = useSharedValue(0);\n  const transitionY = useSharedValue(0);\n  const { width } = useWindowDimensions();\n  const imagePinch = React.createRef();\n  const imageRotation = React.createRef();\n  const imagePan = React.createRef();\n\n  const pinchHandler =\n    useAnimatedGestureHandler<PinchGestureHandlerGestureEvent>({\n      onActive: (event) => {\n        scale.value = event.scale;\n        focalX.value = event.focalX;\n        focalY.value = event.focalY;\n      },\n      onEnd: () => {\n        scale.value = 1;\n      },\n    });\n\n  const roteteHandler =\n    useAnimatedGestureHandler<RotationGestureHandlerGestureEvent>({\n      onActive: (event) => {\n        rotate.value = event.rotation * 90;\n      },\n      onEnd: () => {\n        rotate.value = withSpring(0);\n      },\n    });\n\n  const panHandler = useAnimatedGestureHandler<PanGestureHandlerGestureEvent>({\n    onActive: (event) => {\n      transitionX.value = -event.translationX;\n      transitionY.value = -event.translationY;\n    },\n    onEnd: () => {\n      transitionX.value = withSpring(0);\n      transitionY.value = withSpring(0);\n    },\n  });\n\n  const rStyle = useAnimatedStyle(() => ({\n    transform: [\n      { translateX: focalX.value },\n      { translateY: focalY.value },\n      { translateX: -100 },\n      { translateY: -100 },\n      { scale: scale.value },\n      { translateX: -focalX.value },\n      { translateY: -focalY.value },\n      { translateX: 100 },\n      { translateY: 100 },\n      { rotate: `${rotate.value}deg` },\n      { translateX: -transitionX.value },\n      { translateY: -transitionY.value },\n    ],\n  }));\n\n  return (\n    <PanGestureHandler\n      simultaneousHandlers={[imagePinch, imageRotation]}\n      onGestureEvent={panHandler}\n      ref={imagePan}\n    >\n      <Animated.View>\n        <PinchGestureHandler\n          ref={imagePinch}\n          simultaneousHandlers={[imagePan, imageRotation]}\n          onGestureEvent={pinchHandler}\n        >\n          <Animated.View style={{ width }}>\n            <RotationGestureHandler\n              ref={imageRotation}\n              simultaneousHandlers={[imagePan, imagePinch]}\n              onGestureEvent={roteteHandler}\n            >\n              <Animated.View\n                style={[styles.container, rStyle]}\n                collapsable={false}\n              >\n                {children}\n              </Animated.View>\n            </RotationGestureHandler>\n          </Animated.View>\n        </PinchGestureHandler>\n      </Animated.View>\n    </PanGestureHandler>\n  );\n};\n"]}